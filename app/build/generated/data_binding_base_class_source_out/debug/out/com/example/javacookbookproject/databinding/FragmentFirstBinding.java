// Generated by view binder compiler. Do not edit!
package com.example.javacookbookproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Space;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.javacookbookproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFirstBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonFirst;

  @NonNull
  public final ConstraintLayout nestedScrollView;

  @NonNull
  public final EditText passField;

  @NonNull
  public final Space space7;

  @NonNull
  public final Space space8;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final EditText userField;

  @NonNull
  public final TextView wrongLogin;

  private FragmentFirstBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonFirst,
      @NonNull ConstraintLayout nestedScrollView, @NonNull EditText passField,
      @NonNull Space space7, @NonNull Space space8, @NonNull TextView textView2,
      @NonNull EditText userField, @NonNull TextView wrongLogin) {
    this.rootView = rootView;
    this.buttonFirst = buttonFirst;
    this.nestedScrollView = nestedScrollView;
    this.passField = passField;
    this.space7 = space7;
    this.space8 = space8;
    this.textView2 = textView2;
    this.userField = userField;
    this.wrongLogin = wrongLogin;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_first, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFirstBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_first;
      Button buttonFirst = ViewBindings.findChildViewById(rootView, id);
      if (buttonFirst == null) {
        break missingId;
      }

      ConstraintLayout nestedScrollView = (ConstraintLayout) rootView;

      id = R.id.passField;
      EditText passField = ViewBindings.findChildViewById(rootView, id);
      if (passField == null) {
        break missingId;
      }

      id = R.id.space7;
      Space space7 = ViewBindings.findChildViewById(rootView, id);
      if (space7 == null) {
        break missingId;
      }

      id = R.id.space8;
      Space space8 = ViewBindings.findChildViewById(rootView, id);
      if (space8 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.userField;
      EditText userField = ViewBindings.findChildViewById(rootView, id);
      if (userField == null) {
        break missingId;
      }

      id = R.id.wrongLogin;
      TextView wrongLogin = ViewBindings.findChildViewById(rootView, id);
      if (wrongLogin == null) {
        break missingId;
      }

      return new FragmentFirstBinding((ConstraintLayout) rootView, buttonFirst, nestedScrollView,
          passField, space7, space8, textView2, userField, wrongLogin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
