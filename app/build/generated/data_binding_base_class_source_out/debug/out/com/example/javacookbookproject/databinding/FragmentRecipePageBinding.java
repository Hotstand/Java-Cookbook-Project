// Generated by view binder compiler. Do not edit!
package com.example.javacookbookproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.javacookbookproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRecipePageBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView directions;

  @NonNull
  public final LinearLayout directionsHbox;

  @NonNull
  public final TextView directionsLabel;

  @NonNull
  public final NestedScrollView directionsScrollView;

  @NonNull
  public final ImageButton editDirectionsButton;

  @NonNull
  public final ImageButton editIngredientsButton;

  @NonNull
  public final ImageButton editRecipeNameButton;

  @NonNull
  public final ImageButton favoriteButton;

  @NonNull
  public final TextView ingredients;

  @NonNull
  public final LinearLayout ingredientsHbox;

  @NonNull
  public final TextView ingredientsLabel;

  @NonNull
  public final LinearLayout layout1;

  @NonNull
  public final ImageView recipeImage;

  @NonNull
  public final TextView recipeName;

  @NonNull
  public final LinearLayout topLayoutH;

  private FragmentRecipePageBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView directions, @NonNull LinearLayout directionsHbox,
      @NonNull TextView directionsLabel, @NonNull NestedScrollView directionsScrollView,
      @NonNull ImageButton editDirectionsButton, @NonNull ImageButton editIngredientsButton,
      @NonNull ImageButton editRecipeNameButton, @NonNull ImageButton favoriteButton,
      @NonNull TextView ingredients, @NonNull LinearLayout ingredientsHbox,
      @NonNull TextView ingredientsLabel, @NonNull LinearLayout layout1,
      @NonNull ImageView recipeImage, @NonNull TextView recipeName,
      @NonNull LinearLayout topLayoutH) {
    this.rootView = rootView;
    this.directions = directions;
    this.directionsHbox = directionsHbox;
    this.directionsLabel = directionsLabel;
    this.directionsScrollView = directionsScrollView;
    this.editDirectionsButton = editDirectionsButton;
    this.editIngredientsButton = editIngredientsButton;
    this.editRecipeNameButton = editRecipeNameButton;
    this.favoriteButton = favoriteButton;
    this.ingredients = ingredients;
    this.ingredientsHbox = ingredientsHbox;
    this.ingredientsLabel = ingredientsLabel;
    this.layout1 = layout1;
    this.recipeImage = recipeImage;
    this.recipeName = recipeName;
    this.topLayoutH = topLayoutH;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRecipePageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRecipePageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_recipe_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRecipePageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.directions;
      TextView directions = ViewBindings.findChildViewById(rootView, id);
      if (directions == null) {
        break missingId;
      }

      id = R.id.directionsHbox;
      LinearLayout directionsHbox = ViewBindings.findChildViewById(rootView, id);
      if (directionsHbox == null) {
        break missingId;
      }

      id = R.id.directionsLabel;
      TextView directionsLabel = ViewBindings.findChildViewById(rootView, id);
      if (directionsLabel == null) {
        break missingId;
      }

      NestedScrollView directionsScrollView = (NestedScrollView) rootView;

      id = R.id.editDirectionsButton;
      ImageButton editDirectionsButton = ViewBindings.findChildViewById(rootView, id);
      if (editDirectionsButton == null) {
        break missingId;
      }

      id = R.id.editIngredientsButton;
      ImageButton editIngredientsButton = ViewBindings.findChildViewById(rootView, id);
      if (editIngredientsButton == null) {
        break missingId;
      }

      id = R.id.editRecipeNameButton;
      ImageButton editRecipeNameButton = ViewBindings.findChildViewById(rootView, id);
      if (editRecipeNameButton == null) {
        break missingId;
      }

      id = R.id.favoriteButton;
      ImageButton favoriteButton = ViewBindings.findChildViewById(rootView, id);
      if (favoriteButton == null) {
        break missingId;
      }

      id = R.id.ingredients;
      TextView ingredients = ViewBindings.findChildViewById(rootView, id);
      if (ingredients == null) {
        break missingId;
      }

      id = R.id.ingredientsHbox;
      LinearLayout ingredientsHbox = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsHbox == null) {
        break missingId;
      }

      id = R.id.ingredientsLabel;
      TextView ingredientsLabel = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsLabel == null) {
        break missingId;
      }

      id = R.id.layout1;
      LinearLayout layout1 = ViewBindings.findChildViewById(rootView, id);
      if (layout1 == null) {
        break missingId;
      }

      id = R.id.recipeImage;
      ImageView recipeImage = ViewBindings.findChildViewById(rootView, id);
      if (recipeImage == null) {
        break missingId;
      }

      id = R.id.recipeName;
      TextView recipeName = ViewBindings.findChildViewById(rootView, id);
      if (recipeName == null) {
        break missingId;
      }

      id = R.id.topLayoutH;
      LinearLayout topLayoutH = ViewBindings.findChildViewById(rootView, id);
      if (topLayoutH == null) {
        break missingId;
      }

      return new FragmentRecipePageBinding((NestedScrollView) rootView, directions, directionsHbox,
          directionsLabel, directionsScrollView, editDirectionsButton, editIngredientsButton,
          editRecipeNameButton, favoriteButton, ingredients, ingredientsHbox, ingredientsLabel,
          layout1, recipeImage, recipeName, topLayoutH);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
